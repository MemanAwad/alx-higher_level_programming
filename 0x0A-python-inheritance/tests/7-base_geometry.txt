The '' 7-base_geometry'' module
==========================

using ''BaseGeometry''
==========================

first import the function for the module:
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

using the class:

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("strinng", "hello")
	Traceback (most recent call last):
	TypeError: strinng must be an integer

	>>> bg.integer_validator("", 2)

	>>> bg.integer_validator("", "99")
    	Traceback (most recent call last):
    	TypeError:  must be an integer

	>>> bg.area()
    	Traceback (most recent call last):
    	Exception: area() is not implemented

	>>> bg.integer_validator("my_int", 0)
    	Traceback (most recent call last):
    	ValueError: my_int must be greater than 0

	>>> bg.integer_validator("my_int")
    	Traceback (most recent call last):
    	TypeError: integer_validator() missing 1 required positional argument: 'value'

	>>> bg.integer_validator()
    	Traceback (most recent call last):
    	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

	>>> bg.integer_validator("my_int", None)
	Traceback (most recent call last):
    	TypeError: my_int must be an integer

	>>> bg.integer_validator("my_int", {1})
    	Traceback (most recent call last):
    	TypeError: my_int must be an integer

	>>> bg.integer_validator("my_int", (13,))
    	Traceback (most recent call last):
    	TypeError: my_int must be an integer

	>> bg.integer_validator("list", [0])
    	raceback (most recent call last):
    	ypeError: list must be an integer
